#include <iostream>
using namespace std;

int main()
{
	int m, n;
	cin >> m >> n;
	for (int i = m; i < n; i++)
	{
		for (int j = i+1; j < n; j++)
		{
			float a = sqrt(i * i + j * j);
			if (a<=n&&a>j&&a-(int)a==0)
			{
				cout << i<<" " << j << " " << a << endl;
			}
		}
	}
	return 0;
}


#include <iostream>
using namespace std;

bool check(int &x)
{
	int sum = 0;
	for (int i = 1; i < x; i++)
	{
		if (x%i==0)
		{
			sum += i ;
		}
		
	}
	if (sum==x)
	{
		return 1;
	}
}

int main()
{
	int m, n, sum = 0;
	cin >> m >> n;
	if (m<=2)
		m = 3;
	for (int i = m; i <= n; i++)
	{
		if (check(i)==1)
		{
			cout << i << " ";
		}
	}
	return 0;
}

#include <iostream>
using namespace std;

bool check(int n,int m)
{
	int k=1,x=1;
	while (true)
	{
		if (n==k)
		{
			return 1;
		}
		else
		{
			x *= 10;
			k = m % x;
		}
		if (k>n)
		{
			return 0;
		}
	}
}

int main()
{
	int m, n, sum = 0;
	cin >> m >> n;
	for (int i = m; i < n; i++)
	{
		for (int j = i; j < n; j++)
		{
			if (i*i==j&&check(i,j)==1)
			{
				cout << i << "," << j << ";";
			}
		}
	}
	return 0;
}


#include <iostream>
using namespace std;

int main()
{
	int n;
	cin >> n;
	int* a = new int[n];
	a[1] = a[2] = 1;
	for (int i = 3; i < n; i++)
	{
		a[i] = a[i - 1] + a[i - 2];
	}
	cout << n << "th Fibonacci number = " << a[n - 1] + a[n - 2] << endl;
	delete[] a;
}

#include <iostream>
using namespace std;

int check(int n,int m)
{
	int x = m % 10;
	if (m==0)
	{
		return 0;
	}
	return pow(x, n) + check(n, m / 10);
}

int main()
{
	int n,m=0,x=1;
	cin >> n;
	int* a = new int[n];
	for (int i = n-1; i >= 0; i--)
	{
		a[i] = 9;
		m += a[i] * x;
		x *= 10;
	}
	for (int i = x / 10; i < m; i++)
	{
		if (check(n, i) == i)
		{
			cout << i << endl;
		}
	}
	return 0;
}

#include <iostream>
using namespace std;

bool check(int n)
{
	int dem = 0;
	for (int i = 1; i <= n; i++)
	{
		if (n%i==0)
		{
			dem++;
		}
	}
	if (dem==2)
	{
		return true;
	}
	return false;
}

int main()
{
	int n, m;
	cin >> n >> m;
	for (int i = n; i <= m; i++)
	{
		for (int j = i; j <= m; j++)
		{
			if (j-i==2&&check(i)&&check(j))
			{
				cout << "(" << i << "," << j << ")" << endl;
			}
		}
	}
	return 0;
}

#include <iostream>
using namespace std;

bool check(int n)
{
	int dem = 0;
	for (int i = 1; i <= n; i++)
	{
		if (n%i==0)
		{
			dem++;
		}
	}
	if (dem==2)
	{
		return true;
	}
	return false;
}

int main()
{
	int n, m;
	cin >> n >> m;
	for (int i = n; i <= m; i++)
	{
		if (check(i)&&check(2*i+1))
		{
			cout << i << endl;
		}
	}
	return 0;
}

#include <iostream>
using namespace std;

unsigned long long GiaiThua(int n)
{
	if (n==1||n==0)
		return 1;
	return n * GiaiThua(n - 1);
}

int main()
{
	int n, m;
	cin >> n >> m;
	if (n < 1) n = 1;
	for (int i = n; i <= m; i++)
		cout << GiaiThua(2 * i) /(GiaiThua(i + 1)* GiaiThua(i))<< endl;
	return 0;
}

#include <iostream>
using namespace std;

unsigned long long GiaiThua(int n)
{
	if (n==1||n==0)
		return 1;
	return n * GiaiThua(n - 1);
}

int main()
{
	int n, m;
	cin >> n >> m;
	if (n < 1) n = 1;
	/*for (int i = n; i <= m; i++)
		cout << GiaiThua(2 * i) /(GiaiThua(i + 1)* GiaiThua(i))<< endl;*/
	for (int i = n; i <= m; i++)
	{
		int* a = new int[i];
		a[0] = 1;
		for (int j = 0; j < i; j++)
		{
			a[j] = a[i - j + 1];
		}
		delete[]a;
	}
	return 0;
}

#include <iostream>
using namespace std;

int main()
{
	int n,m;
	cin >> n>>m;
	int* a = new int[m-n];
	a[0] = 0;
	a[1] = 1;
	for (int i = 0; i < m-n; i++)
	{
		if(i>1)
		a[i] = a[i - 1] + 2*a[i - 2];
		cout << a[i] << endl;
	}
	delete[] a;
	return 0;
}


#include <iostream>
using namespace std;

unsigned long long GiaiThua(int n)
{
	if (n == 1 || n == 0)
		return 1;
	return n * GiaiThua(n - 1);
}

unsigned long long ToHop(int n, int k)
{
	return (GiaiThua(n) / (GiaiThua(k) * GiaiThua(n - k)));
}

int main()
{
	int n, m;
	cin >> n >> m;
	if (n < 1) n = 1;
	for (int i = n; i <= m; i++)
	{
		int* a = new int[i+1];
		for (int j = 1; j <= i; j++)
		{			
			a[j] = (1 / (float)i) * ToHop(i, j - 1) * ToHop(i, j);
			cout << a[j] << " ";
		}
		cout << endl;
		delete[] a;
	}

	return 0;
}
